func Main()
    w4 = 12
    w2 = alloc(w4)
    w4 = 16
    w3 = alloc(w4)
    [w2 + 0] = w3
    w4 = @BBS_Print
    [w3 + 0] = w4
    w4 = @BBS_Init
    [w3 + 4] = w4
    w4 = @BBS_Start
    [w3 + 8] = w4
    w4 = @BBS_Sort
    [w3 + 12] = w4
    w5 = 10
    w1 = @BBS_Start
    w0 = call w1(w2 w5)
    print(w0)
    ret_ = 0
    return ret_
    
func BBS_Start(this sz)
    aux01 = 0
    w9 = this
    w10 = sz
    w8 = @BBS_Init
    w7 = call w8(w9 w10)
    aux01 = w7
    w15 = this
    w14 = @BBS_Print
    w13 = call w14(w15)
    aux01 = w13
    w18 = 99999
    print(w18)
    w21 = this
    w20 = @BBS_Sort
    w19 = call w20(w21)
    aux01 = w19
    w26 = this
    w25 = @BBS_Print
    w24 = call w25(w26)
    aux01 = w24
    w29 = 0
    return w29
    
func BBS_Sort(this)
    nt = 0
    i = 0
    aux02 = 0
    aux04 = 0
    aux05 = 0
    aux06 = 0
    aux07 = 0
    j = 0
    t = 0
    w31 = [this + 8]
    w33 = 1
    w30 = w31 - w33
    i = w30
    w37 = 0
    w39 = 1
    w36 = w37 - w39
    aux02 = w36
  loop_42:
    w43 = aux02
    w45 = i
    w42 = w43 < w45
    if0 w42 goto endLoop_42
    w47 = 1
    j = w47
  loop_49:
    w50 = j
    w53 = i
    w55 = 1
    w52 = w53 + w55
    w49 = w50 < w52
    if0 w49 goto endLoop_49
    w59 = j
    w61 = 1
    w58 = w59 - w61
    aux07 = w58
    w68 = [this + 4]
    w69 = aux07
    w65 = [w68 + 0]
    w66 = w69 < w65
    if0 w66 goto outOfBounds_64
    w65 = 4
    w66 = 1
    w67 = w69 + w66
    w66 = w67 * w65
    w65 = w68 + w66
    w64 = [w65 + 0]
    goto pass_64
  outOfBounds_64:
    error("array index out of bounds")
  pass_64:
    aux04 = w64
    w76 = [this + 4]
    w77 = j
    w73 = [w76 + 0]
    w74 = w77 < w73
    if0 w74 goto outOfBounds_72
    w73 = 4
    w74 = 1
    w75 = w77 + w74
    w74 = w75 * w73
    w73 = w76 + w74
    w72 = [w73 + 0]
    goto pass_72
  outOfBounds_72:
    error("array index out of bounds")
  pass_72:
    aux05 = w72
    w81 = aux05
    w83 = aux04
    w80 = w81 < w83
    if0 w80 goto else_80
    w86 = j
    w88 = 1
    w85 = w86 - w88
    aux06 = w85
    w95 = [this + 4]
    w96 = aux06
    w92 = [w95 + 0]
    w93 = w96 < w92
    if0 w93 goto outOfBounds_91
    w92 = 4
    w93 = 1
    w94 = w96 + w93
    w93 = w94 * w92
    w92 = w95 + w93
    w91 = [w92 + 0]
    goto pass_91
  outOfBounds_91:
    error("array index out of bounds")
  pass_91:
    t = w91
    w103 = aux06
    w108 = [this + 4]
    w109 = j
    w105 = [w108 + 0]
    w106 = w109 < w105
    if0 w106 goto outOfBounds_104
    w105 = 4
    w106 = 1
    w107 = w109 + w106
    w106 = w107 * w105
    w105 = w108 + w106
    w104 = [w105 + 0]
    goto pass_104
  outOfBounds_104:
    error("array index out of bounds")
  pass_104:
    w100 = 4
    w101 = 1
    w102 = w103 + w101
    w101 = w102 * w100
    w99 = [this + 4]
    w100 = w99 + w101
    [w100 + 0] = w104
    w116 = j
    w117 = t
    w113 = 4
    w114 = 1
    w115 = w116 + w114
    w114 = w115 * w113
    w112 = [this + 4]
    w113 = w112 + w114
    [w113 + 0] = w117
    goto end_80
  else_80:
    w119 = 0
    nt = w119
  end_80:
    w122 = j
    w124 = 1
    w121 = w122 + w124
    j = w121
    goto loop_49
  endLoop_49:
    w128 = i
    w130 = 1
    w127 = w128 - w130
    i = w127
    goto loop_42
  endLoop_42:
    w133 = 0
    return w133
    
func BBS_Print(this)
    j = 0
    w134 = 0
    j = w134
  loop_136:
    w137 = j
    w139 = [this + 8]
    w136 = w137 < w139
    if0 w136 goto endLoop_136
    w145 = [this + 4]
    w146 = j
    w142 = [w145 + 0]
    w143 = w146 < w142
    if0 w143 goto outOfBounds_141
    w142 = 4
    w143 = 1
    w144 = w146 + w143
    w143 = w144 * w142
    w142 = w145 + w143
    w141 = [w142 + 0]
    goto pass_141
  outOfBounds_141:
    error("array index out of bounds")
  pass_141:
    print(w141)
    w149 = j
    w151 = 1
    w148 = w149 + w151
    j = w148
    goto loop_136
  endLoop_136:
    w154 = 0
    return w154
    
func BBS_Init(this sz)
    w155 = sz
    [this + 8] = w155
    w162 = sz
    w160 = 4
    w161 = 1
    w158 = w162 + w161
    w159 = w158 * w160
    w157 = alloc(w159)
    [w157 + 0] = w162
    [this + 4] = w157
    w168 = 0
    w169 = 20
    w165 = 4
    w166 = 1
    w167 = w168 + w166
    w166 = w167 * w165
    w164 = [this + 4]
    w165 = w164 + w166
    [w165 + 0] = w169
    w175 = 1
    w176 = 7
    w172 = 4
    w173 = 1
    w174 = w175 + w173
    w173 = w174 * w172
    w171 = [this + 4]
    w172 = w171 + w173
    [w172 + 0] = w176
    w182 = 2
    w183 = 12
    w179 = 4
    w180 = 1
    w181 = w182 + w180
    w180 = w181 * w179
    w178 = [this + 4]
    w179 = w178 + w180
    [w179 + 0] = w183
    w189 = 3
    w190 = 18
    w186 = 4
    w187 = 1
    w188 = w189 + w187
    w187 = w188 * w186
    w185 = [this + 4]
    w186 = w185 + w187
    [w186 + 0] = w190
    w196 = 4
    w197 = 2
    w193 = 4
    w194 = 1
    w195 = w196 + w194
    w194 = w195 * w193
    w192 = [this + 4]
    w193 = w192 + w194
    [w193 + 0] = w197
    w203 = 5
    w204 = 11
    w200 = 4
    w201 = 1
    w202 = w203 + w201
    w201 = w202 * w200
    w199 = [this + 4]
    w200 = w199 + w201
    [w200 + 0] = w204
    w210 = 6
    w211 = 6
    w207 = 4
    w208 = 1
    w209 = w210 + w208
    w208 = w209 * w207
    w206 = [this + 4]
    w207 = w206 + w208
    [w207 + 0] = w211
    w217 = 7
    w218 = 9
    w214 = 4
    w215 = 1
    w216 = w217 + w215
    w215 = w216 * w214
    w213 = [this + 4]
    w214 = w213 + w215
    [w214 + 0] = w218
    w224 = 8
    w225 = 19
    w221 = 4
    w222 = 1
    w223 = w224 + w222
    w222 = w223 * w221
    w220 = [this + 4]
    w221 = w220 + w222
    [w221 + 0] = w225
    w231 = 9
    w232 = 5
    w228 = 4
    w229 = 1
    w230 = w231 + w229
    w229 = w230 * w228
    w227 = [this + 4]
    w228 = w227 + w229
    [w228 + 0] = w232
    w234 = 0
    return w234
    
